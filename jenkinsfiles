pipeline {
    agent any 
    parameters {
        choice(name: 'AWS Service', choices: ['s3', 'ec2'], description: 'Select AWS Service')
        choice(name: 'TERRAFORM_ACTION', choices: ['Apply', 'Destroy'], description: 'Select Terraform Action')
        string(name: 'pipeline_name', defaultValue: '', description: 'pipeline_name')
        string(name: 'repo_name', defaultValue: '', description: 'repo_name')

    }
    environment {
        GIT_REPO_URL =  'https://github.com/umeshqtree/project.git'
        TERRAFORM_DIR = "/var/lib/jenkins/workspace/${params.pipeline_name}/project/${params.AWS_SERVICE}"
    }
    stages {
        stage('Git checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: env.GIT_REPO_URL]])
            }
        }   
        stage('Terraform Init') {
            steps {
                dir("${env.TERRAFORM_DIR}") {
                    sh 'terraform init'
                }
            }   
        }
        stage('Terraform Actions') {
            steps {
                dir("$env.TERRAFORM_DIR") {
                    script {
                        if (params.TERRAFORM_ACTION == 'Apply') {
                            sh 'terraform apply -auto-approve'
                        }
                        else if (params.TERRAFORM_ACTION == 'Destroy') {
                            sh 'terraform destroy -auto-approve'
                        }
                        else {
                            error("Invalid Terrform Action selected")
                        }
                     
                    } 
                    
                }
            }
        }
    }  
}

