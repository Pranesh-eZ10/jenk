pipeline {
  agent any
  environment {
        GIT_REPO_URL = 'https://github.com/umeshqtree/project.git' //update repository
        docker_dir = "/var/lib/jenkins/workspace/${params.Pipeline_name}/docker/"
    }
  parameters {
        string(name: "Pipeline_name", defaultValue: "", description: "enter pipeline name"),
        string(name: "image_name", defaultValue: "", description: "enter image name")
        string(name: "port_number", defaultValue: "", description: "enter port number")
        string(name: "network_name", defaultValue: "", description: "enter network name")
        string(name: "volume_name", defaultValue: "", description: "enter volume name")
    }
  stages {
    stage('Checkout SCM') {
        steps {
         // Checkout the code from your Git repository
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], userRemoteConfigs: [[url: env.GIT_REPO_URL]]])
         }
        }
        stage('updating variables') {
        steps {
             dir("${env.docker_dir}"){
               sh "
               sudo sed -i -e "s/image_name/${params.iname}/g" docker-compose.yml
               sudo sed -i -e "s/port_number/${params.pname}/g" docker-compose.yml
               sudo sed -i -e "s/network_name/${params.nname}/g" docker-compose.yml
               sudo sed -i -e "s/volume_name/${params.vname}/g" docker-compose.yml
               "
             }
         }
        }
        stage('Execute the docker-compose file') {
            steps {
                dir("${env.docker_dir}") {
                    sh "sudo docker-compose up -d"
                }
            }
        }
        stage('After execution list containers') {
            steps {
                dir("${env.docker_dir}") {
                    sh "sudo docker ps"
                }
            }
        }
}
}
